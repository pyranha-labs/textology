[pycodestyle]
exclude=.*,__pycache__,test,*venv,*virtualenv*
# Ignore E402 import not at top of file, pylint will catch and we do not want double ignore lines in the code.
# Ignore E501 line too long, up to maintainers/contributors to use best judgement.
# Ignore E722 bare except, pylint will catch and we do not want double ignore lines in the code.
# Ignore W503 break before binary operator, both W503 and W504 are enabled by default meaning no breaks could be made.
ignore=E402,E501,E722,W503

[pydocstyle]
convention=google
match-dir=^(?!\.|__pycache__|test|venv|virtualenv).*
# PEP257 "D204 1 blank line after class docstring" is inconsistent depending on pydocstyle version. Add for consistency.
add-select=D204

[pylint]
# Pylint requires a full list of disables, or a full list of includes, and cannot be partially overridden.
# The following list starts with the pylint defaults, followed by project specifics.
# Do not modify the pylint defaults without adding a comment as to why, and only comment out instead of remove.
disable=raw-checker-failed,
        bad-inline-option,
        locally-disabled,
        file-ignored,
        suppressed-message,
        useless-suppression,
        deprecated-pragma,
        use-symbolic-message-instead,
        # Textology specific modifications.
        # W1203, allow f-strings to be used in logging messages.
        logging-fstring-interpolation,
        # C0301 line too long, up to maintainers/contributors to use best judgement.
        line-too-long,
        # R0801 duplicate code, up to maintainers/contributors to use best judgement.
        duplicate-code,
        # W0221 arguments-differ, disabled until pylint known is resolved to prevent flagging variadics such as kwargs.
        arguments-differ,
        # R0903 too-few-public-methods, custom classes are allowed to have low amount of public functions.
        too-few-public-methods,

[pylint.MASTER]
ignore=__pycache__,build,test
# Use jobs 0 to autodetect CPUs on system for parallel performance.
jobs=0

[pylint.DESIGN]
max-args=6
max-attributes=10

[pylint.TYPECHECK]
# Property setters and getters are dynamic attributes, allow these to be overridden in subclasses.
generated-members=fset,fget
# Add "Extension" as a suffix for mixin style classes, to allow emphasis on Textual extension types.
mixin-class-rgx=.*[Mm]ixin|.*Extension

[pylint.VARIABLES]
# The "id" variable is an attribute on Textual widgets, and should be allowed in subclasses to maintain parity.
allowed-redefined-builtins=id
good-names=id

[isort]
profile=black
force_single_line=True

[tool:pytest]
norecursedirs=.* __pycache__ site-packages venv virtualenv virtualenvs
filterwarnings =
    # Promote all warnings to errors to ensure performance, forwards compatibility, and code quality.
    error

[mypy]
exclude=(__pycache__)/
ignore_missing_imports=True
warn_unused_configs=True
show_error_codes=True
incremental=False
follow_imports=skip
# There is no option for an enable list, so a full disable list must be provided instead.
disable_error_code=attr-defined,
        name-defined,
        call-arg,
        arg-type,
        call-overload,
        valid-type,
        var-annotated,
        override,
        return,
        return-value,
        assignment,
        type-arg,
        type-var,
        union-attr,
        index,
        operator,
        list-item,
        dict-item,
        typeddict-item,
        has-type,
        import,
        no-redef,
        func-returns-value,
        abstract,
        valid-newtype,
        str-format,
        str-bytes-safe,
        exit-return,
        no-untyped-call,
        redundant-cast,
        comparison-overlap,
        no-any-unimported,
        no-any-return,
        unreachable,
        name-match,
        syntax,
        misc
disallow_untyped_defs=True
